Arrays in Java
An array in Java is a collection of elements of the same data type stored in a contiguous memory location. It is a fixed-size data structure.

1. Declaring and Initializing Arrays
1.1 Declaration
java
Copy
Edit
// Declaration without initialization
int[] arr;   // Recommended
int arr2[];  // Also valid
1.2 Initialization
java
Copy
Edit
// Initialize with size
arr = new int[5];  // Array of size 5, default values will be 0

// Declare and initialize together
int[] arr3 = new int[3]; // {0, 0, 0}
1.3 Direct Initialization
java
Copy
Edit
int[] arr4 = {1, 2, 3, 4, 5};  // Array with predefined values
2. Accessing Array Elements
Array elements are accessed using an index (0-based indexing).

java
Copy
Edit
int[] nums = {10, 20, 30, 40};
System.out.println(nums[0]); // Output: 10
System.out.println(nums[2]); // Output: 30
3. Updating Array Elements
java
Copy
Edit
nums[1] = 25; // Update the second element (index 1) to 25
System.out.println(nums[1]); // Output: 25
4. Array Length
java
Copy
Edit
System.out.println(nums.length); // Output: 4 (Number of elements in the array)
5. Traversing an Array
5.1 Using a For Loop
java
Copy
Edit
for (int i = 0; i < nums.length; i++) {
    System.out.println(nums[i]);
}
5.2 Using an Enhanced For Loop (For-Each)
java
Copy
Edit
for (int num : nums) {
    System.out.println(num);
}
6. Multidimensional Arrays
6.1 2D Array Declaration and Initialization
java
Copy
Edit
int[][] matrix = {
    {1, 2, 3},
    {4, 5, 6},
    {7, 8, 9}
};
6.2 Accessing 2D Array Elements
java
Copy
Edit
System.out.println(matrix[1][2]); // Output: 6
6.3 Traversing a 2D Array
java
Copy
Edit
for (int i = 0; i < matrix.length; i++) {
    for (int j = 0; j < matrix[i].length; j++) {
        System.out.print(matrix[i][j] + " ");
    }
    System.out.println();
}
7. Common Operations on Arrays
7.1 Sorting an Array
java
Copy
Edit
import java.util.Arrays;
int[] numbers = {5, 3, 8, 1, 2};
Arrays.sort(numbers); // Sorts in ascending order
System.out.println(Arrays.toString(numbers)); // Output: [1, 2, 3, 5, 8]
7.2 Searching in an Array
java
Copy
Edit
int index = Arrays.binarySearch(numbers, 3); // Binary search for 3
System.out.println(index); // Output: 2 (Index of element)
7.3 Copying an Array
java
Copy
Edit
int[] copyArray = Arrays.copyOf(numbers, numbers.length);
System.out.println(Arrays.toString(copyArray)); // Output: [1, 2, 3, 5, 8]
8. Limitations of Arrays
Fixed size: Cannot change the array size after initialization.
No built-in methods for inserting or deleting elements.
Slower searching (O(n) in linear search, O(log n) in binary search).
