Packages in Java (Simple Explanation)

A package in Java is like a folder that helps organize and group similar types of classes and interfaces together. It helps in avoiding name conflicts and makes it easier to maintain large programs.
Why Use Packages?

    Organized Code – Just like keeping different types of files in different folders on your computer.
    Avoids Name Conflicts – Two classes with the same name can exist in different packages.
    Access Control – You can restrict access to certain classes using access modifiers.
    Reusability – You can use already written code in multiple programs.

Types of Packages

    Built-in Packages – Provided by Java (e.g., java.util, java.io, java.lang).
    User-defined Packages – Created by the programmer.

How to Create and Use a Package?
1️⃣ Creating a Package

package mypackage;  // Declaring the package at the top

public class MyClass {
    public void showMessage() {
        System.out.println("Hello from MyClass!");
    }
}

👉 The file should be saved as MyClass.java.
2️⃣ Using the Package in Another Class

import mypackage.MyClass;  // Importing the class from the package

public class Test {
    public static void main(String[] args) {
        MyClass obj = new MyClass();
        obj.showMessage();
    }
}

Common Java Packages
Package Name	Purpose
java.util	Utility classes (e.g., ArrayList, HashMap)
java.io	Input-Output operations (e.g., File handling)
java.lang	Core Java classes (e.g., String, Math, System)
java.sql	Database connectivity
Summary

    Package = Folder (Organizes classes)
    Built-in Packages (Java provides them)
    User-defined Packages (We create them)
    Use import to access classes from other packages

Would you like any more examples? 😊
